/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import spacemanModel from "@/assets/3d/spaceman.glb";

type GLTFResult = GLTF & {
  nodes: {
    Mesh: THREE.SkinnedMesh;
    Mesh_1: THREE.SkinnedMesh;
    mixamorigHips: THREE.Bone;
  };
  materials: {
    Ch44_Body: THREE.MeshPhysicalMaterial;
    Ch44_body1: THREE.MeshPhysicalMaterial;
  };
};

// type ActionName = 'cheering' | 'idle' | 'talk on phone'

interface Props {
  props: React.JSX.IntrinsicElements["group"];
  activeAction: "cheering" | "idle" | "talk on phone";
}

export function Spaceman({ activeAction, props }: Props) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials, animations } = useGLTF(
    spacemanModel
  ) as unknown as GLTFResult;
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    Object.values(actions).forEach((action) => {
      if (action === actions[activeAction]) return;
      action?.fadeOut(0.5);
    });

    actions[activeAction]?.reset().fadeIn(0.5).play();
  }, [activeAction]);

  return (
    <group ref={group} {...props} dispose={null}>
      <skinnedMesh
        name="Mesh"
        geometry={nodes.Mesh.geometry}
        material={materials.Ch44_Body}
        skeleton={nodes.Mesh.skeleton}
      />
      <skinnedMesh
        name="Mesh_1"
        geometry={nodes.Mesh_1.geometry}
        material={materials.Ch44_body1}
        skeleton={nodes.Mesh_1.skeleton}
      />

      <primitive object={nodes.mixamorigHips} />
    </group>
  );
}

useGLTF.preload(spacemanModel);
